package com.cg.app;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Optional;

 class Employee {
	private int id;
	private String name;
	private String address;
	private int salary;
	public Employee(int id, String name, String address, int salary) {
		super();
		this.id = id;
		this.name = name;
		this.address = address;
		this.salary = salary;
	}
	public Employee() {
		super();	
		
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getAddress() {
		return address;
	}
	public void setAddress(String address) {
		this.address = address;
	}
	public int getSalary() {
		return salary;
	}
	public void setSalary(int salary) {
		this.salary = salary;
	}
	@Override
	public String toString() {
		return String.format("Employee [id=%s, name=%s, address=%s, salary=%s]", id, name, address, salary);
	}

}


public class Demo {
	public static void main(String[] args) {
		Sort1 q=new Sort1();
		List<Employee> list= new ArrayList<>();
		Employee e=new Employee();
		Employee e1=new Employee(1,"Aditi","",4000);
		Employee e2=new Employee(2,"Viashnavi","",4000);
		Employee e3=new Employee(3,"Rohit","",4000);
		Employee e4=new Employee(4,"Abhi","",700);
		Employee e5=new Employee(5,"Sam","",10000);
		
		list.add(e1);
		list.add(e2);
		list.add(e3);
		list.add(e4);
		list.add(e5);
		
		System.out.println(	q.getSorted(list));
	}
	
}
class Sort1{
	
	public Optional<List<Employee>> getSorted(List<Employee>list){
		
		Collections.sort(list,new B());
		return Optional.of(list);
	
	}	
}
class B implements Comparator<Employee>{
 
	@Override
	public int compare(Employee e1, Employee e2) {
		int y=e2.getSalary()-e1.getSalary();
		if(y==0) {
			int f=e1.getName().compareTo( e2.getName());
			return f;
		}
		return y;
		
	}

}
